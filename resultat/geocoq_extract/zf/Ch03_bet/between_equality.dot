digraph "unsat_graph" {
  vertex_0 [color=red, label="[]", shape=box, style=filled];
  vertex_0 -> vertex_1 [label="simplify_reflect-", dir="back"];
  vertex_1 [shape=box, label="sk_A ≠ sk_B\l", style=filled];
  vertex_1 -> vertex_2 [label="cnf", dir="back"];
  vertex_2 [shape=box, label="negated_goal\l  ¬ (∀ A/141:point B/142:point C/143:point.\l        ((Bet A/141 B/142 C/143) ⇒\l         ((Bet B/142 A/141 C/143) ⇒ (A/141 = B/142))))\l  # skolems: [].\l", style=filled];
  vertex_2 -> vertex_3 [label="cnf.neg", dir="back"];
  vertex_3 [color=green, shape=box, label="goal\l  [file \"../resultat/geocoq_extract/zf/Ch03_bet/between_equality.zf\" \l   \"zf_stmt_128\"]\l  ∀ A/141:point B/142:point C/143:point.\l    ((Bet A/141 B/142 C/143) ⇒\l     ((Bet B/142 A/141 C/143) ⇒ (A/141 = B/142))).\l", style=filled];
  vertex_0 -> vertex_4 [label="simplify_reflect-", dir="back"];
  vertex_4 [shape=box, label="sk_A = sk_B\l", style=filled];
  vertex_4 -> vertex_5 [label="s_sup-\l\{X5[1] → sk_B[0], X6[1] → sk_A[0]\}[1]\l", dir="back"];
  vertex_5 [shape=box, label="forall (X5:point) (X6:point). [X6 = X5 ∨ ¬Bet X6 X5 X6]\l", style=filled];
  vertex_5 -> vertex_6 [label="cnf", dir="back"];
  vertex_6 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch03_bet/between_equality.zf\" \l   \"Labelbetween_identity\"]\l  ∀ A/139:point B/140:point. ((Bet A/139 B/140 A/139) ⇒ (A/139 = B/140)).\l", style=filled];
  vertex_4 -> vertex_7 [label="s_sup-\l\{X5[1] → sk_B[0], X6[1] → sk_A[0]\}[0]\l", dir="back"];
  vertex_7 [shape=box, label="Bet sk_A sk_B sk_A\l", style=filled];
  vertex_7 -> vertex_8 [label="s_sup-\l\{X0[0] → sk_A[1]\}[0]\l", dir="back"];
  vertex_8 [shape=box, label="forall (X0:point). [Bet X0 sk_B sk_A ∨ ¬Bet sk_B X0 sk_C]\l", style=filled];
  vertex_8 -> vertex_9 [label="simplify", dir="back"];
  vertex_9 [shape=box, label="forall (X0:point).\l[¬Bet sk_B X0 sk_C ∨ Bet X0 sk_B sk_A ∨ ¬Bet sk_B X0 sk_C]\l", style=filled];
  vertex_9 -> vertex_10 [label="s_sup+\l\{X0[0] → sk_B[1], X0[1] → X1[0]\}[0]\l", dir="back"];
  vertex_10 [shape=box, label="forall (X0:point) (X1:point).\l[Bet X1 (sk_X X1 sk_B X0 sk_A) sk_A ∨ ¬Bet X0 X1 sk_C]\l", style=filled];
  vertex_10 -> vertex_11 [label="s_sup-\l\{X0[0] → sk_A[1], X1[0] → sk_B[1], X2[0] → sk_C[1]\}[0]\l", dir="back"];
  vertex_11 [shape=box, label="forall (X0:point) (X1:point) (X2:point) (X3:point) (X4:point).\l[¬Bet X0 X1 X2 ∨ Bet X3 (sk_X X3 X1 X4 X0) X0 ∨ ¬Bet X4 X3 X2]\l", style=filled];
  vertex_11 -> vertex_12 [label="cnf", dir="back"];
  vertex_12 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch03_bet/between_equality.zf\" \l   \"Labelinner_pasch\"]\l  ∀ A/133:point B/134:point C/135:point P/136:point Q/137:point.\l    ((Bet A/133 P/136 C/135) ⇒\l     ((Bet B/134 Q/137 C/135) ⇒\l      (∃ X/138:point. ((Bet Q/137 X/138 A/133) ∧ (Bet P/136 X/138 B/134))))).\l", style=filled];
  vertex_10 -> vertex_13 [label="s_sup-\l\{X0[0] → sk_A[1], X1[0] → sk_B[1], X2[0] → sk_C[1]\}[1]\l", dir="back"];
  vertex_13 [shape=box, label="Bet sk_A sk_B sk_C\l", style=filled];
  vertex_13 -> vertex_2 [label="cnf", dir="back"];
  vertex_9 -> vertex_14 [label="s_sup+\l\{X0[0] → sk_B[1], X0[1] → X1[0]\}[1]\l", dir="back"];
  vertex_14 [shape=box, label="forall (X0:point). [¬Bet sk_B X0 sk_C ∨ sk_B = sk_X X0 sk_B sk_B sk_A]\l", style=filled];
  vertex_14 -> vertex_5 [label="s_sup-\l\{X0[0] → sk_B[0], X5[1] → sk_X X1 sk_B X0 sk_A[0], X6[1] → sk_B[0]\}[1]\l", dir="back"];
  vertex_14 -> vertex_15 [label="s_sup-\l\{X0[0] → sk_B[0], X5[1] → sk_X X1 sk_B X0 sk_A[0], X6[1] → sk_B[0]\}[0]\l", dir="back"];
  vertex_15 [shape=box, label="forall (X0:point) (X1:point).\l[Bet sk_B (sk_X X1 sk_B X0 sk_A) X0 ∨ ¬Bet X0 X1 sk_C]\l", style=filled];
  vertex_15 -> vertex_16 [label="s_sup-\l\{X0[0] → sk_A[1], X1[0] → sk_B[1], X2[0] → sk_C[1]\}[0]\l", dir="back"];
  vertex_16 [shape=box, label="forall (X0:point) (X1:point) (X2:point) (X3:point) (X4:point).\l[¬Bet X0 X1 X2 ∨ Bet X1 (sk_X X3 X1 X4 X0) X4 ∨ ¬Bet X4 X3 X2]\l", style=filled];
  vertex_16 -> vertex_12 [label="cnf", dir="back"];
  vertex_15 -> vertex_13 [label="s_sup-\l\{X0[0] → sk_A[1], X1[0] → sk_B[1], X2[0] → sk_C[1]\}[1]\l", dir="back"];
  vertex_7 -> vertex_17 [label="s_sup-\l\{X0[0] → sk_A[1]\}[1]\l", dir="back"];
  vertex_17 [shape=box, label="Bet sk_B sk_A sk_C\l", style=filled];
  vertex_17 -> vertex_2 [label="cnf", dir="back"];
  }


