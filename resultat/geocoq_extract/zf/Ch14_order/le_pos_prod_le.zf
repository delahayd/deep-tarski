include "../tarski_term_def.zf".
val O : point.
val E : point.
val E1 : point.
assert ~Col O E E1.
#diff_O_A
assert[name "Labeldiff_O_A"] forall (O E E1 A mA : point). ~Col O E E1 => Opp O E E1 A mA => Diff O E E1 O A mA.
#sum_diff
assert[name "Labelsum_diff"] forall (O E E1 A B S : point). Sum O E E1 A B S => Diff O E E1 S A B.
#diff_ar2
assert[name "Labeldiff_ar2"] forall (O E E1 A B AMB : point). Diff O E E1 A B AMB => Ar2 O E E1 A B AMB.
#prod_exists
assert[name "Labelprod_exists"] forall (A B : point). Col O E A => Col O E B => (exists (C : point). Prod O E E1 A B C).
#compatibility_of_prod_with_order
assert[name "Labelcompatibility_of_prod_with_order"] forall (O E E1 A B AB : point). LeP O E E1 O A => LeP O E E1 O B => Prod O E E1 A B AB =>LeP O E E1 O AB.
#diff_sum
assert[name "Labeldiff_sum"] forall (O E E1 A B S : point). Diff O E E1 S A B => Sum O E E1 A B S.
#distr_r
assert[name "Labeldistr_r"] forall (O E E1 A B C D AC BC DC : point). Sum O E E1 A B D => Prod O E E1 A C AC => Prod O E E1 B C BC => (Prod O E E1 D C DC => Sum O E E1 AC BC DC).
#sum_assoc_1
assert[name "Labelsum_assoc_1"] forall (O E E1 A B C AB BC ABC : point). Sum O E E1 A B AB => Sum O E E1 B C BC => Sum O E E1 A BC ABC => Sum O E E1 AB C ABC.
#opp_exists
assert[name "Labelopp_exists"] forall (A : point). Col O E A => (exists (MA : point). Opp O E E1 A MA).
#sum_comm
assert[name "Labelsum_comm"] forall (A B C : point). Sum O E E1 A B C => Sum O E E1 B A C.
#compatibility_of_sum_with_order
assert[name "Labelcompatibility_of_sum_with_order"] forall (O E E1 A B C APC BPC : point). LeP O E E1 A B => Sum O E E1 A C APC => Sum O E E1 B C BPC => LeP O E E1 APC BPC.
#diff_exists
assert[name "Labeldiff_exists"] forall (O E E1 A B : point). ~Col O E E1 => Col O E A => Col O E B => (exists (D : point). Diff O E E1 A B D).
#diff_uniqueness
assert[name "Labeldiff_uniqueness"] forall (O E E1 A B D1 D2 : point). Diff O E E1 A B D1 => Diff O E E1 A B D2 => D1=D2.
#sum_A_O
assert[name "Labelsum_A_O"] forall (A : point). Col O E A => Sum O E E1 A O A.
#sum_O_B
assert[name "Labelsum_O_B"] forall (B : point). Col O E B => Sum O E E1 O B B.
rewrite[name "LabelOpp"] forall (O E E1 A B : point). Opp O E E1 A B <=> Sum O E E1 B A O.
rewrite[name "LabelSum"] forall (O E E1 A B C : point). Sum O E E1 A B C <=> Ar2 O E E1 A B C && (exists (A1 C1 : point). Pj E E1 A  A1 && Col O E1 A1 && Pj O E  A1 C1 && Pj O E1 B  C1 && Pj E1 E C1 C).
rewrite[name "LabelProd"] forall (O E E1 A B C : point). Prod O E E1 A B C <=> Ar2 O E E1 A B C && (exists (B1 : point). Pj E E1 B B1 && Col O E1 B1 && Pj E1 A B1 C).
rewrite[name "LabelAr2"] forall (O E E1 A B C : point). Ar2 O E E1 A B C <=> ~ Col O E E1 && Col O E A && Col O E B && Col O E C.
goal forall (O E E1 A B C AC BC : point). LeP O E E1 A B => LeP O E E1 O C => Prod O E E1 A C AC => Prod O E E1 B C BC => LeP O E E1 AC BC.