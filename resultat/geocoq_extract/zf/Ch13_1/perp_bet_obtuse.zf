include "../tarski_term_def.zf".
#col_permutation_5
assert[name "Labelcol_permutation_5"] forall (A B C : point). Col A B C => Col A C B.
#acute_bet_obtuse
assert[name "Labelacute_bet_obtuse"] forall (A B C P : point). B!=C => Bet A B C => Acute A B P => Obtuse C B P.
#perp_out_acute
assert[name "Labelperp_out_acute"] forall (A B C C1 : point). Out B A C1 => Perp A B C C1 => Acute A B C.
#perp_right_comm
assert[name "Labelperp_right_comm"] forall (A B C D : point). Perp A B C D => Perp A B D C.
#perp_left_comm
assert[name "Labelperp_left_comm"] forall (A B C D : point). Perp A B C D => Perp B A C D.
#bet_col
assert[name "Labelbet_col"] forall (A B C : point). Bet A B C => Col A B C.
#out_trivial
assert[name "Labelout_trivial"] forall (P A : point). A!=P => Out P A A.
#between_symmetry
assert[name "Labelbetween_symmetry"] forall (A B C : point). Bet A B C => Bet C B A.
#perp_col
assert[name "Labelperp_col"] forall (A B C D E : point). A!=E => Perp A B C D => Col A B E => Perp A E C D.
#col_permutation_1
assert[name "Labelcol_permutation_1"] forall (A B C : point). Col A B C => Col B C A.
#perp_distinct
assert[name "Labelperp_distinct"] forall (A B C D : point). Perp A B C D => A!=B && C!=D.
#perp_comm
assert[name "Labelperp_comm"] forall (A B C D : point). Perp A B C D => Perp B A D C.
goal forall (A B C C1 : point). B!=C1 => Perp A B C C1 => Bet A B C1 => Obtuse A B C.