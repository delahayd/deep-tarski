digraph "unsat_graph" {
  vertex_0 [color=red, label="[]", shape=box, style=filled];
  vertex_0 -> vertex_1 [label="s_sup-\l\{X0[0] → sk_P[1], X1[0] → sk_A[1]\}[1]\l", dir="back"];
  vertex_1 [shape=box, label="¬Bet sk_P sk_A sk_A\l", style=filled];
  vertex_1 -> vertex_2 [label="simpl_trail", dir="back"];
  vertex_2 [color=cyan3, shape=box, label="¬⟦Bet sk_P sk_A sk_A⟧/2\l", style=filled];
  vertex_2 -> vertex_3 [label="sat_resolution", dir="back"];
  vertex_3 [color=cyan3, shape=box, label="¬⟦sk_A = sk_P⟧/3\l", style=filled];
  vertex_3 -> vertex_4 [label="simplify_reflect-", dir="back"];
  vertex_4 [shape=box, label="sk_A ≠ sk_P\l", style=filled];
  vertex_4 -> vertex_5 [label="cnf", dir="back"];
  vertex_5 [shape=box, label="negated_goal\l  ¬ (∀ P/141:point A/142:point.\l        ((A/142 ≠ P/141) ⇒ (Out P/141 A/142 A/142)))\l  # skolems: [].\l", style=filled];
  vertex_5 -> vertex_6 [label="cnf.neg", dir="back"];
  vertex_6 [color=green, shape=box, label="goal\l  [file \"../resultat/geocoq_extract/zf/Ch06_out_lines/out_trivial.zf\" \l   \"zf_stmt_128\"]\l  ∀ P/141:point A/142:point.\l    ((A/142 ≠ P/141) ⇒ (Out P/141 A/142 A/142)).\l", style=filled];
  vertex_3 -> vertex_7 [label="simplify_reflect-", dir="back"];
  vertex_7 [shape=box, label="sk_A = sk_P ← ⟦sk_A = sk_P⟧/3\l", style=filled];
  vertex_7 -> vertex_8 [label="split", dir="back"];
  vertex_8 [shape=box, label="[¬Bet sk_P sk_A sk_A ∨ sk_A = sk_P]\l", style=filled];
  vertex_8 -> vertex_9 [label="simplify", dir="back"];
  vertex_9 [shape=box, label="[sk_A = sk_P ∨ ¬Bet sk_P sk_A sk_A ∨ sk_A = sk_P]\l", style=filled];
  vertex_9 -> vertex_10 [label="rw_clause\l\{X5[1] → sk_P[0], X6[1] → sk_A[0], X7[1] → sk_A[0]\}[1]\l", dir="back"];
  vertex_10 [color=navajowhite, shape=box, label="(¬Out X5 X6 X7 :=\l   [X6 = X5 ∨ ¬Bet X5 X7 X6 ∨ X7 = X5∧\l    X6 = X5 ∨ ¬Bet X5 X6 X7 ∨ X7 = X5] [B])\l", style=filled];
  vertex_10 -> vertex_11 [label="rw.lit", dir="back"];
  vertex_11 [color=yellow, shape=box, label="rewrite\l  [file \"../resultat/geocoq_extract/zf/Ch06_out_lines/out_trivial.zf\" \l   \"LabelOut\"]\l  ¬ Out X5 X6 X7\l  =\> X6 = X5 ∨ ¬ Bet X5 X7 X6 ∨ X7 = X5 && X6 = X5 ∨ \l     ¬ Bet X5 X6 X7 ∨ X7 = X5.\l", style=filled];
  vertex_9 -> vertex_12 [label="rw_clause\l\{X5[1] → sk_P[0], X6[1] → sk_A[0], X7[1] → sk_A[0]\}[0]\l", dir="back"];
  vertex_12 [shape=box, label="¬Out sk_P sk_A sk_A\l", style=filled];
  vertex_12 -> vertex_5 [label="cnf", dir="back"];
  vertex_2 -> vertex_13 [label="sat_resolution", dir="back"];
  vertex_13 [color=cyan3, shape=box, label="¬⟦Bet sk_P sk_A sk_A⟧/2 ⊔ ⟦sk_A = sk_P⟧/3\l", style=filled];
  vertex_13 -> vertex_8 [label="split", dir="back"];
  vertex_1 -> vertex_14 [label="simpl_trail", dir="back"];
  vertex_14 [shape=box, label="¬Bet sk_P sk_A sk_A ← ¬⟦Bet sk_P sk_A sk_A⟧/2\l", style=filled];
  vertex_14 -> vertex_15 [label="split", dir="back"];
  vertex_15 [shape=box, label="[¬Bet sk_P sk_A sk_A ∨ sk_A = sk_P]\l", style=filled];
  vertex_15 -> vertex_16 [label="simplify", dir="back"];
  vertex_16 [shape=box, label="[sk_A = sk_P ∨ ¬Bet sk_P sk_A sk_A ∨ sk_A = sk_P]\l", style=filled];
  vertex_16 -> vertex_10 [label="rw_clause\l\{X5[1] → sk_P[0], X6[1] → sk_A[0], X7[1] → sk_A[0]\}[1]\l", dir="back"];
  vertex_16 -> vertex_12 [label="rw_clause\l\{X5[1] → sk_P[0], X6[1] → sk_A[0], X7[1] → sk_A[0]\}[0]\l", dir="back"];
  vertex_0 -> vertex_17 [label="s_sup-\l\{X0[0] → sk_P[1], X1[0] → sk_A[1]\}[0]\l", dir="back"];
  vertex_17 [shape=box, label="forall (X0:point) (X1:point). Bet X0 X1 X1\l", style=filled];
  vertex_17 -> vertex_18 [label="s_sup-\l\{X2[0] → X1[0], X3[1] → X2[0], X4[1] → X0[0]\}[0]\l", dir="back"];
  vertex_18 [shape=box, label="forall (X0:point) (X1:point) (X2:point). [Bet X0 X1 X2 ∨ ¬Bet X2 X1 X0]\l", style=filled];
  vertex_18 -> vertex_19 [label="cnf", dir="back"];
  vertex_19 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch06_out_lines/out_trivial.zf\" \l   \"Labelbetween_symmetry\"]\l  ∀ A/133:point B/134:point C/135:point.\l    ((Bet A/133 B/134 C/135) ⇒ (Bet C/135 B/134 A/133)).\l", style=filled];
  vertex_17 -> vertex_20 [label="s_sup-\l\{X2[0] → X1[0], X3[1] → X2[0], X4[1] → X0[0]\}[1]\l", dir="back"];
  vertex_20 [shape=box, label="forall (X3:point) (X4:point). Bet X3 X3 X4\l", style=filled];
  vertex_20 -> vertex_21 [label="cnf", dir="back"];
  vertex_21 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch06_out_lines/out_trivial.zf\" \l   \"Labelbetween_trivial2\"]\l  ∀ A/136:point B/137:point. (Bet A/136 A/136 B/137).\l", style=filled];
  }


