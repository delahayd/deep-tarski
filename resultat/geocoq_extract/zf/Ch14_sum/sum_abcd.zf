include "../tarski_term_def.zf".
val O : point.
val E : point.
val E1 : point.
assert ~Col O E E1.
#sum_comm
assert[name "Labelsum_comm"] forall (A B C : point). Sum O E E1 A B C => Sum O E E1 B A C.
#sum22_permut
assert[name "Labelsum22_permut"] forall (O E E1 A B C D S : point). sum22 O E E1 A B C D S => sum22 O E E1 D A B C S.
#sum_ar2
assert[name "Labelsum_ar2"] forall (O E E1 A B C : point). Sum O E E1 A B C => Ar2 O E E1 A B C.
#sum_uniqueness
assert[name "Labelsum_uniqueness"] forall (A B C1 C2 : point). Sum O E E1 A B C1 => Sum O E E1 A B C2 => C1=C2.
rewrite[name "Labelsum22"] forall (O E E1 A B C D S: point). sum22 O E E1 A B C D S <=> (exists (AB CD : point). Sum O E E1 A B AB && Sum O E E1 C D CD && Sum O E E1 AB CD S).
rewrite[name "LabelAr2"] forall (O E E1 A B C : point). Ar2 O E E1 A B C <=> ~ Col O E E1 && Col O E A && Col O E B && Col O E C.
goal forall (O E E1 A B C D AB CD BC AD S : point). Sum O E E1 A B AB => Sum O E E1 C D CD => Sum O E E1 B C BC => Sum O E E1 A D AD => Sum O E E1 AB CD S => Sum O E E1 BC AD S.