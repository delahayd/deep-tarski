include "../tarski_term_def.zf".
val O : point.
val E : point.
val E1 : point.
assert ~Col O E E1.
#diff_ar2
assert[name "Labeldiff_ar2"] forall (O E E1 A B AMB : point). Diff O E E1 A B AMB => Ar2 O E E1 A B AMB.
#sum_exists
assert[name "Labelsum_exists"] forall (A B : point). Col O E A => Col O E B => (exists (C : point). Sum O E E1 A B C).
#sum_diff2_diff_sum2_a
assert[name "Labelsum_diff2_diff_sum2_a"] forall (O E E1 A B C X Y Z dXA dYB dZC : point). Sum O E E1 A B C => Sum O E E1 X Y Z => Diff O E E1 X A dXA => Diff O E E1 Y B dYB => Sum O E E1 dXA dYB dZC => Diff O E E1 Z C dZC.
#diff_uniqueness
assert[name "Labeldiff_uniqueness"] forall (O E E1 A B D1 D2 : point). Diff O E E1 A B D1 => Diff O E E1 A B D2 => D1=D2.
#sum_ar2
assert[name "Labelsum_ar2"] forall (O E E1 A B C : point). Sum O E E1 A B C => Ar2 O E E1 A B C.
rewrite[name "LabelAr2"] forall (O E E1 A B C : point). Ar2 O E E1 A B C <=> ~ Col O E E1 && Col O E A && Col O E B && Col O E C.
goal forall (O E E1 A B C X Y Z dXA dYB dZC : point). Sum O E E1 A B C => Sum O E E1 X Y Z => Diff O E E1 X A dXA => Diff O E E1 Y B dYB => Diff O E E1 Z C dZC => Sum O E E1 dXA dYB dZC.