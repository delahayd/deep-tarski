include "../tarski_term_def.zf".
#col_permutation_5
assert[name "Labelcol_permutation_5"] forall (A B C : point). Col A B C => Col A C B.
#col_trivial_1
assert[name "Labelcol_trivial_1"] forall (A B : point). Col A A B.
#col_trivial_3
assert[name "Labelcol_trivial_3"] forall (A B : point). Col A B A.
#sump_to_sum
assert[name "Labelsump_to_sum"] forall (O E E1 A B C : point). Sump O E E1 A B C => Sum O E E1 A B C.
#project_trivial
assert[name "Labelproject_trivial"] forall (P A B X Y : point). A!=B => X!=Y => Col A B P => ~Par A B X Y => Proj P P A B X Y.
#par_reflexivity
assert[name "Labelpar_reflexivity"] forall (A B : point). A!=B => Par A B A B.
#col_trivial_2
assert[name "Labelcol_trivial_2"] forall (A B : point). Col A B B.
#col_permutation_1
assert[name "Labelcol_permutation_1"] forall (A B C : point). Col A B C => Col B C A.
rewrite[name "LabelOpp"] forall (O E E1 A B : point). Opp O E E1 A B <=> Sum O E E1 B A O.
rewrite[name "LabelSump"] forall (O E E1 A B C : point). Sump O E E1 A B C <=> Col O E A && Col O E B && (exists (A1 C1 P1 : point). Proj A A1 O E1 E E1 &&  Par O E A1 P1 &&  Proj B C1 A1 P1 O E1 &&  Proj C1 C O E E E1).
goal Opp O E E1 O O.