include "../tarski_term_def.zf".
val O : point.
val E : point.
val E1 : point.
assert ~Col O E E1.
#diff_ar2
assert[name "Labeldiff_ar2"] forall (O E E1 A B AMB : point). Diff O E E1 A B AMB => Ar2 O E E1 A B AMB.
#sum_uniqueness
assert[name "Labelsum_uniqueness"] forall (A B C1 C2 : point). Sum O E E1 A B C1 => Sum O E E1 A B C2 => C1=C2.
#sum_exists
assert[name "Labelsum_exists"] forall (A B : point). Col O E A => Col O E B => (exists (C : point). Sum O E E1 A B C).
#sum_comm
assert[name "Labelsum_comm"] forall (A B C : point). Sum O E E1 A B C => Sum O E E1 B A C.
#sum_O_B_eq
assert[name "Labelsum_O_B_eq"] forall (B C : point). Sum O E E1 O B C => B=C.
#opp_uniqueness
assert[name "Labelopp_uniqueness"] forall (A MA1 MA2 : point). Opp O E E1 A MA1 => Opp O E E1 A MA2 => MA1=MA2.
#sum22_permut
assert[name "Labelsum22_permut"] forall (O E E1 A B C D S : point). sum22 O E E1 A B C D S => sum22 O E E1 D A B C S.
rewrite[name "LabelDiff"] forall (O E E1 A B C : point). Diff O E E1 A B C <=> (exists (B1 : point). Opp O E E1 B B1 && Sum O E E1 A B1 C).
rewrite[name "LabelAr2"] forall (O E E1 A B C : point). Ar2 O E E1 A B C <=> ~ Col O E E1 && Col O E A && Col O E B && Col O E C.
rewrite[name "Labelsum22"] forall (O E E1 A B C D S: point). sum22 O E E1 A B C D S <=> (exists (AB CD : point). Sum O E E1 A B AB && Sum O E E1 C D CD && Sum O E E1 AB CD S).
goal forall (O E E1 A B C dBA dCB dCA : point). Diff O E E1 B A dBA => Diff O E E1 C B dCB => Diff O E E1 C A dCA => Sum O E E1 dCB dBA dCA.