include "../tarski_term_def.zf".
#one_side_not_col123
assert[name "Labelone_side_not_col123"] forall (A B X Y : point). OS A B X Y => ~Col A B X.
#col_one_side_out
assert[name "Labelcol_one_side_out"] forall (A B X Y : point). Col A X Y => OS A B X Y => Out A X Y.
#bet_out
assert[name "Labelbet_out"] forall (A B C : point). B!=A => Bet A B C => Out A B C.
#col_permutation_1
assert[name "Labelcol_permutation_1"] forall (A B C : point). Col A B C => Col B C A.
#invert_one_side
assert[name "Labelinvert_one_side"] forall (A B P Q : point). OS A B P Q => OS B A P Q.
#one_side_symmetry
assert[name "Labelone_side_symmetry"] forall (P Q A B : point). OS P Q A B => OS P Q B A.
#col_permutation_5
assert[name "Labelcol_permutation_5"] forall (A B C : point). Col A B C => Col A C B.
#one_side_transitivity
assert[name "Labelone_side_transitivity"] forall (P Q A B C : point). OS P Q A B => OS P Q B C => OS P Q A C.
#between_symmetry
assert[name "Labelbetween_symmetry"] forall (A B C : point). Bet A B C => Bet C B A.
#not_col_permutation_5
assert[name "Labelnot_col_permutation_5"] forall (A B C : point). ~Col A B C => ~Col A C B.
#not_col_permutation_4
assert[name "Labelnot_col_permutation_4"] forall (A B C : point). ~Col A B C => ~Col B A C.
#not_col_permutation_2
assert[name "Labelnot_col_permutation_2"] forall (A B C : point). ~Col A B C => ~Col C A B.
#out_one_side
assert[name "Labelout_one_side"] forall (A B X Y : point). (~Col A B X || ~Col A B Y) => Out A X Y => OS A B X Y.
#not_col_permutation_1
assert[name "Labelnot_col_permutation_1"] forall (A B C : point). ~Col A B C => ~Col B C A.
goal forall (A X Y Z : point). OS A X Y Z => TS A Y X Z => OS A Z X Y.