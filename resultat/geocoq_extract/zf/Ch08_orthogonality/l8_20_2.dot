digraph "unsat_graph" {
  vertex_0 [color=red, label="[]", shape=box, style=filled];
  vertex_0 -> vertex_1 [label="simplify_reflect-", dir="back"];
  vertex_1 [shape=box, label="sk_B ≠ sk_C\l", style=filled];
  vertex_1 -> vertex_2 [label="cnf", dir="back"];
  vertex_2 [shape=box, label="negated_goal\l  ¬ (∀ A/139:point B/140:point C/141:point C1/142:point D/143:point \l        P/144:point.\l        ((Per A/139 B/140 C/141) ⇒\l         ((Midpoint P/144 C1/142 D/143) ⇒\l          ((Midpoint A/139 C1/142 C/141) ⇒\l           ((Midpoint B/140 D/143 C/141) ⇒\l            ((B/140 ≠ C/141) ⇒ (A/139 ≠ P/144)))))))\l  # skolems: [].\l", style=filled];
  vertex_2 -> vertex_3 [label="cnf.neg", dir="back"];
  vertex_3 [color=green, shape=box, label="goal\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/l8_20_2.zf\" \l   \"zf_stmt_128\"]\l  ∀ A/139:point B/140:point C/141:point C1/142:point D/143:point \l    P/144:point.\l    ((Per A/139 B/140 C/141) ⇒\l     ((Midpoint P/144 C1/142 D/143) ⇒\l      ((Midpoint A/139 C1/142 C/141) ⇒\l       ((Midpoint B/140 D/143 C/141) ⇒\l        ((B/140 ≠ C/141) ⇒ (A/139 ≠ P/144)))))).\l", style=filled];
  vertex_0 -> vertex_4 [label="simplify_reflect-", dir="back"];
  vertex_4 [shape=box, label="sk_B = sk_C\l", style=filled];
  vertex_4 -> vertex_5 [label="s_sup-\l\{X0[1] → sk_C[0], X1[1] → sk_B[0]\}[1]\l", dir="back"];
  vertex_5 [shape=box, label="forall (X0:point) (X1:point). [X1 = X0 ∨ ¬Midpoint X1 X0 X0]\l", style=filled];
  vertex_5 -> vertex_6 [label="cnf", dir="back"];
  vertex_6 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/l8_20_2.zf\" \l   \"Labell7_3\"]\l  ∀ M/133:point A/134:point.\l    ((Midpoint M/133 A/134 A/134) ⇒ (M/133 = A/134)).\l", style=filled];
  vertex_4 -> vertex_7 [label="s_sup-\l\{X0[1] → sk_C[0], X1[1] → sk_B[0]\}[0]\l", dir="back"];
  vertex_7 [shape=box, label="Midpoint sk_B sk_C sk_C\l", style=filled];
  vertex_7 -> vertex_8 [label="demod", dir="back"];
  vertex_8 [shape=box, label="sk_C = sk_D\l", style=filled];
  vertex_8 -> vertex_9 [label="s_sup-\l\{X0[0] → sk_D[1]\}[0]\l", dir="back"];
  vertex_9 [shape=box, label="forall (X0:point). [sk_C = X0 ∨ ¬Midpoint sk_A sk_C1 X0]\l", style=filled];
  vertex_9 -> vertex_10 [label="s_sup-\l\{X2[0] → sk_A[1], X3[0] → sk_C1[1], X4[0] → sk_C[1]\}[0]\l", dir="back"];
  vertex_10 [shape=box, label="forall (X2:point) (X3:point) (X4:point) (X5:point).\l[¬Midpoint X2 X3 X4 ∨ X4 = X5 ∨ ¬Midpoint X2 X3 X5]\l", style=filled];
  vertex_10 -> vertex_11 [label="cnf", dir="back"];
  vertex_11 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/l8_20_2.zf\" \l   \"Labelsymmetric_point_uniqueness\"]\l  ∀ A/135:point P/136:point P1/137:point P2/138:point.\l    ((Midpoint P/136 A/135 P1/137) ⇒\l     ((Midpoint P/136 A/135 P2/138) ⇒ (P1/137 = P2/138))).\l", style=filled];
  vertex_9 -> vertex_12 [label="s_sup-\l\{X2[0] → sk_A[1], X3[0] → sk_C1[1], X4[0] → sk_C[1]\}[1]\l", dir="back"];
  vertex_12 [shape=box, label="Midpoint sk_A sk_C1 sk_C\l", style=filled];
  vertex_12 -> vertex_2 [label="cnf", dir="back"];
  vertex_8 -> vertex_13 [label="s_sup-\l\{X0[0] → sk_D[1]\}[1]\l", dir="back"];
  vertex_13 [shape=box, label="Midpoint sk_A sk_C1 sk_D\l", style=filled];
  vertex_13 -> vertex_14 [label="demod", dir="back"];
  vertex_14 [shape=box, label="sk_A = sk_P\l", style=filled];
  vertex_14 -> vertex_2 [label="cnf", dir="back"];
  vertex_13 -> vertex_15 [label="demod", dir="back"];
  vertex_15 [shape=box, label="Midpoint sk_P sk_C1 sk_D\l", style=filled];
  vertex_15 -> vertex_2 [label="cnf", dir="back"];
  vertex_7 -> vertex_16 [label="demod", dir="back"];
  vertex_16 [shape=box, label="Midpoint sk_B sk_D sk_C\l", style=filled];
  vertex_16 -> vertex_2 [label="cnf", dir="back"];
  }


