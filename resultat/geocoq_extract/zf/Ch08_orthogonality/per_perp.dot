digraph "unsat_graph" {
  vertex_0 [color=red, label="[]", shape=box, style=filled];
  vertex_0 -> vertex_1 [label="simplify_reflect-", dir="back"];
  vertex_1 [shape=box, label="sk_B ≠ sk_C\l", style=filled];
  vertex_1 -> vertex_2 [label="cnf", dir="back"];
  vertex_2 [shape=box, label="negated_goal\l  ¬ (∀ A/141:point B/142:point C/143:point.\l        ((A/141 ≠ B/142) ⇒\l         ((B/142 ≠ C/143) ⇒\l          ((Per A/141 B/142 C/143) ⇒ (Perp A/141 B/142 B/142 C/143)))))\l  # skolems: [].\l", style=filled];
  vertex_2 -> vertex_3 [label="cnf.neg", dir="back"];
  vertex_3 [color=green, shape=box, label="goal\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/per_perp.zf\" \l   \"zf_stmt_128\"]\l  ∀ A/141:point B/142:point C/143:point.\l    ((A/141 ≠ B/142) ⇒\l     ((B/142 ≠ C/143) ⇒\l      ((Per A/141 B/142 C/143) ⇒ (Perp A/141 B/142 B/142 C/143)))).\l", style=filled];
  vertex_0 -> vertex_4 [label="simplify_reflect-", dir="back"];
  vertex_4 [shape=box, label="sk_A ≠ sk_B\l", style=filled];
  vertex_4 -> vertex_2 [label="cnf", dir="back"];
  vertex_0 -> vertex_5 [label="simplify_reflect-", dir="back"];
  vertex_5 [shape=box, label="[sk_B = sk_C ∨ sk_A = sk_B]\l", style=filled];
  vertex_5 -> vertex_6 [label="simplify", dir="back"];
  vertex_6 [shape=box, label="[sk_A = sk_B ∨ ¬true ∨ sk_B = sk_C]\l", style=filled];
  vertex_6 -> vertex_7 [label="demod", dir="back"];
  vertex_7 [shape=box, label="Per sk_A sk_B sk_C\l", style=filled];
  vertex_7 -> vertex_2 [label="cnf", dir="back"];
  vertex_6 -> vertex_8 [label="demod", dir="back"];
  vertex_8 [shape=box, label="[sk_A = sk_B ∨ ¬Per sk_A sk_B sk_C ∨ sk_B = sk_C]\l", style=filled];
  vertex_8 -> vertex_9 [label="s_sup-\l\{X0[0] → sk_C[1], X1[0] → sk_B[1], X2[0] → sk_A[1]\}[1]\l", dir="back"];
  vertex_9 [shape=box, label="¬Perp sk_A sk_B sk_B sk_C\l", style=filled];
  vertex_9 -> vertex_2 [label="cnf", dir="back"];
  vertex_8 -> vertex_10 [label="s_sup-\l\{X0[0] → sk_C[1], X1[0] → sk_B[1], X2[0] → sk_A[1]\}[0]\l", dir="back"];
  vertex_10 [shape=box, label="forall (X0:point) (X1:point) (X2:point).\l[X1 = X0 ∨ ¬Per X2 X1 X0 ∨ X2 = X1 ∨ Perp X2 X1 X1 X0]\l", style=filled];
  vertex_10 -> vertex_11 [label="s_sup-\l\{X3[1] → X1[0], X4[1] → X0[0], X5[1] → X0[0], X6[1] → X2[0], X7[1] → X0[0]\}[1]\l", dir="back"];
  vertex_11 [shape=box, label="forall (X3:point) (X4:point) (X5:point) (X6:point) (X7:point).\l[Perp X3 X4 X5 X6 ∨ ¬Perp_at X7 X3 X4 X5 X6]\l", style=filled];
  vertex_11 -> vertex_12 [label="cnf", dir="back"];
  vertex_12 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/per_perp.zf\" \l   \"Labell8_14_2_1a\"]\l  ∀ X/136:point A/137:point B/138:point C/139:point D/140:point.\l    ((Perp_at X/136 A/137 B/138 C/139 D/140) ⇒\l     (Perp A/137 B/138 C/139 D/140)).\l", style=filled];
  vertex_10 -> vertex_13 [label="s_sup-\l\{X3[1] → X1[0], X4[1] → X0[0], X5[1] → X0[0], X6[1] → X2[0], X7[1] → X0[0]\}[0]\l", dir="back"];
  vertex_13 [shape=box, label="forall (X0:point) (X1:point) (X2:point).\l[X1 = X0 ∨ ¬Per X1 X0 X2 ∨ Perp_at X0 X1 X0 X0 X2 ∨ X0 = X2]\l", style=filled];
  vertex_13 -> vertex_14 [label="cnf", dir="back"];
  vertex_14 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/per_perp.zf\" \l   \"Labelper_perp_in\"]\l  ∀ A/133:point B/134:point C/135:point.\l    ((A/133 ≠ B/134) ⇒\l     ((B/134 ≠ C/135) ⇒\l      ((Per A/133 B/134 C/135) ⇒ (Perp_at B/134 A/133 B/134 B/134 C/135)))).\l", style=filled];
  }


