digraph "unsat_graph" {
  vertex_0 [color=red, label="[]", shape=box, style=filled];
  vertex_0 -> vertex_1 [label="s_sup-\l", dir="back"];
  vertex_1 [shape=box, label="¬Per sk_B sk_A sk_C\l", style=filled];
  vertex_1 -> vertex_2 [label="cnf", dir="back"];
  vertex_2 [shape=box, label="negated_goal\l  ¬ (∀ A/147:point B/148:point C/149:point.\l        ((Perp A/147 B/148 C/149 A/147) ⇒ (Per B/148 A/147 C/149)))\l  # skolems: [].\l", style=filled];
  vertex_2 -> vertex_3 [label="cnf.neg", dir="back"];
  vertex_3 [color=green, shape=box, label="goal\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/perp_per_1.zf\" \l   \"zf_stmt_128\"]\l  ∀ A/147:point B/148:point C/149:point.\l    ((Perp A/147 B/148 C/149 A/147) ⇒ (Per B/148 A/147 C/149)).\l", style=filled];
  vertex_0 -> vertex_4 [label="s_sup-\l", dir="back"];
  vertex_4 [shape=box, label="Per sk_B sk_A sk_C\l", style=filled];
  vertex_4 -> vertex_5 [label="s_sup-\l\{X0[0] → sk_A[1], X1[0] → sk_C[1], X2[0] → sk_B[1]\}[0]\l", dir="back"];
  vertex_5 [shape=box, label="forall (X0:point) (X1:point) (X2:point).\l[Per X2 X0 X1 ∨ ¬Perp X0 X2 X1 X0]\l", style=filled];
  vertex_5 -> vertex_6 [label="s_sup-\l\{X2[0] → X3[0], X3[1] → X2[0], X4[1] → X1[0]\}[0]\l", dir="back"];
  vertex_6 [shape=box, label="forall (X0:point) (X1:point) (X2:point) (X3:point).\l[Per X0 X1 X2 ∨ ¬Col X2 X3 X1 ∨ ¬Perp X1 X0 X3 X1]\l", style=filled];
  vertex_6 -> vertex_7 [label="s_sup-\l\{X3[0] → X2[0], X5[1] → X3[0], X6[1] → X0[0]\}[0]\l", dir="back"];
  vertex_7 [shape=box, label="forall (X0:point) (X1:point) (X2:point) (X3:point) (X4:point).\l[¬Col X3 X0 X2 ∨ Per X3 X0 X4 ∨ ¬Col X4 X1 X0 ∨ ¬Perp X0 X2 X1 X0]\l", style=filled];
  vertex_7 -> vertex_8 [label="rw_clause\l\{X7[1] → X0[0], X8[1] → X0[0], X9[1] → X1[0], X10[1] → X2[0], X11[1] → X0[0]\}[1]\l", dir="back"];
  vertex_8 [color=navajowhite, shape=box, label="(Perp_at X7 X8 X9 X10 X11 :=\l   [X10 ≠ X11∧\l    Col X7 X10 X11∧\l    ¬Col X12 X8 X9 ∨ Per X12 X7 X13 ∨ ¬Col X13 X10 X11∧\l    Col X7 X8 X9∧\l    X8 ≠ X9] [B])\l", style=filled];
  vertex_8 -> vertex_9 [label="rw.lit", dir="back"];
  vertex_9 [color=yellow, shape=box, label="rewrite\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/perp_per_1.zf\" \l   \"LabelPerp_at\"]\l  Perp_at X7 X8 X9 X10 X11\l  =\> X10 ≠ X11 && Col X7 X10 X11 && ¬ Col X12 X8 X9 ∨ \l     Per X12 X7 X13 ∨ ¬ Col X13 X10 X11 && Col X7 X8 X9 && X8 ≠ X9.\l", style=filled];
  vertex_7 -> vertex_10 [label="rw_clause\l\{X7[1] → X0[0], X8[1] → X0[0], X9[1] → X1[0], X10[1] → X2[0], X11[1] → X0[0]\}[0]\l", dir="back"];
  vertex_10 [shape=box, label="forall (X0:point) (X1:point) (X2:point).\l[Perp_at X0 X0 X1 X2 X0 ∨ ¬Perp X0 X1 X2 X0]\l", style=filled];
  vertex_10 -> vertex_11 [label="cnf", dir="back"];
  vertex_11 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/perp_per_1.zf\" \l   \"Labelperp_perp_in\"]\l  ∀ A/133:point B/134:point C/135:point.\l    ((Perp A/133 B/134 C/135 A/133) ⇒\l     (Perp_at A/133 A/133 B/134 C/135 A/133)).\l", style=filled];
  vertex_6 -> vertex_12 [label="s_sup-\l\{X3[0] → X2[0], X5[1] → X3[0], X6[1] → X0[0]\}[1]\l", dir="back"];
  vertex_12 [shape=box, label="forall (X5:point) (X6:point). Col X5 X6 X5\l", style=filled];
  vertex_12 -> vertex_13 [label="cnf", dir="back"];
  vertex_13 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/perp_per_1.zf\" \l   \"Labelcol_trivial_3\"]\l  ∀ A/138:point B/139:point. (Col A/138 B/139 A/138).\l", style=filled];
  vertex_5 -> vertex_14 [label="s_sup-\l\{X2[0] → X3[0], X3[1] → X2[0], X4[1] → X1[0]\}[1]\l", dir="back"];
  vertex_14 [shape=box, label="forall (X3:point) (X4:point). Col X3 X3 X4\l", style=filled];
  vertex_14 -> vertex_15 [label="cnf", dir="back"];
  vertex_15 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch08_orthogonality/perp_per_1.zf\" \l   \"Labelcol_trivial_1\"]\l  ∀ A/136:point B/137:point. (Col A/136 A/136 B/137).\l", style=filled];
  vertex_4 -> vertex_16 [label="s_sup-\l\{X0[0] → sk_A[1], X1[0] → sk_C[1], X2[0] → sk_B[1]\}[1]\l", dir="back"];
  vertex_16 [shape=box, label="Perp sk_A sk_B sk_C sk_A\l", style=filled];
  vertex_16 -> vertex_2 [label="cnf", dir="back"];
  }


