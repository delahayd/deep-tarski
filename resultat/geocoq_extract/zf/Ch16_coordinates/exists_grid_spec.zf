include "../tarski_term_def.zf".
#cong_reflexivity
assert[name "Labelcong_reflexivity"] forall (A B : point). Cong A B A B.
#cong_symmetry
assert[name "Labelcong_symmetry"] forall (A B C D : point). Cong A B C D => Cong C D A B.
#ex_per_cong
assert[name "Labelex_per_cong"] forall (A B C D X Y : point). A!=B => X!=Y => Col A B C => ~Col A B D => (exists (P : point). Per P C A && Cong P C X Y && OS A B P D).
#not_col_distincts
assert[name "Labelnot_col_distincts"] forall (A B C : point). ~Col A B C => ~Col A B C && A!=B && B!=C && A!=C.
#cong_left_commutativity
assert[name "Labelcong_left_commutativity"] forall (A B C D : point). Cong A B C D => Cong B A C D.
#not_col_permutation_1
assert[name "Labelnot_col_permutation_1"] forall (A B C : point). ~Col A B C => ~Col B C A.
#col_trivial_2
assert[name "Labelcol_trivial_2"] forall (A B : point). Col A B B.
#lower_dim
assert[name "Labellower_dim"]  ~(Bet PA PB PC || Bet PB PC PA || Bet PC PA PB).
#not_col_permutation_5
assert[name "Labelnot_col_permutation_5"] forall (A B C : point). ~Col A B C => ~Col A C B.
#l8_2
assert[name "Labell8_2"] forall (A B C : point). Per A B C => Per C B A.
goal exists (S U1 U2 : point). Cs PA PB S U1 U2.