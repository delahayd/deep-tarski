digraph "unsat_graph" {
  vertex_0 [color=red, label="[]", shape=box, style=filled];
  vertex_0 -> vertex_1 [label="simplify_reflect-", dir="back"];
  vertex_1 [shape=box, label="sk_M ≠ sk_A\l", style=filled];
  vertex_1 -> vertex_2 [label="cnf", dir="back"];
  vertex_2 [shape=box, label="negated_goal\l  ¬ (∀ M/138:point A/139:point.\l        ((Midpoint M/138 A/139 A/139) ⇒ (M/138 = A/139)))\l  # skolems: [].\l", style=filled];
  vertex_2 -> vertex_3 [label="cnf.neg", dir="back"];
  vertex_3 [color=green, shape=box, label="goal\l  [file \"../resultat/geocoq_extract/zf/Ch07_midpoint/l7_3.zf\" \"zf_stmt_128\"]\l  ∀ M/138:point A/139:point.\l    ((Midpoint M/138 A/139 A/139) ⇒ (M/138 = A/139)).\l", style=filled];
  vertex_0 -> vertex_4 [label="simplify_reflect-", dir="back"];
  vertex_4 [shape=box, label="sk_A = sk_M\l", style=filled];
  vertex_4 -> vertex_5 [label="s_sup-\l\{X0[0] → sk_M[1], X1[0] → sk_A[1]\}[0]\l", dir="back"];
  vertex_5 [shape=box, label="forall (X0:point) (X1:point). [X1 = X0 ∨ ¬Bet X1 X0 X1]\l", style=filled];
  vertex_5 -> vertex_6 [label="cnf", dir="back"];
  vertex_6 [color=yellow, shape=box, label="assert\l  [file \"../resultat/geocoq_extract/zf/Ch07_midpoint/l7_3.zf\" \l   \"Labelbetween_identity\"]\l  ∀ A/133:point B/134:point. ((Bet A/133 B/134 A/133) ⇒ (A/133 = B/134)).\l", style=filled];
  vertex_4 -> vertex_7 [label="s_sup-\l\{X0[0] → sk_M[1], X1[0] → sk_A[1]\}[1]\l", dir="back"];
  vertex_7 [shape=box, label="Bet sk_A sk_M sk_A\l", style=filled];
  vertex_7 -> vertex_8 [label="rw_clause\l\{X2[1] → sk_M[0], X3[1] → sk_A[0], X4[1] → sk_A[0]\}[1]\l", dir="back"];
  vertex_8 [color=navajowhite, shape=box, label="(Midpoint X2 X3 X4 := [Bet X3 X2 X4∧\l                       Cong X3 X2 X2 X4] [B])\l", style=filled];
  vertex_8 -> vertex_9 [label="rw.lit", dir="back"];
  vertex_9 [color=yellow, shape=box, label="rewrite\l  [file \"../resultat/geocoq_extract/zf/Ch07_midpoint/l7_3.zf\" \"LabelMidpoint\"]\l  Midpoint X2 X3 X4 =\> Bet X3 X2 X4 && Cong X3 X2 X2 X4.\l", style=filled];
  vertex_7 -> vertex_10 [label="rw_clause\l\{X2[1] → sk_M[0], X3[1] → sk_A[0], X4[1] → sk_A[0]\}[0]\l", dir="back"];
  vertex_10 [shape=box, label="Midpoint sk_M sk_A sk_A\l", style=filled];
  vertex_10 -> vertex_2 [label="cnf", dir="back"];
  }


