digraph "unsat_graph" {
  vertex_0 [color=red, label="[]", shape=box, style=filled];
  vertex_0 -> vertex_1 [label="sat_resolution", dir="back"];
  vertex_1 [color=cyan3, shape=box, label="¬⟦sk_A = sk_B⟧/3\l", style=filled];
  vertex_1 -> vertex_2 [label="simplify_reflect-", dir="back"];
  vertex_2 [shape=box, label="sk_A ≠ sk_B\l", style=filled];
  vertex_2 -> vertex_3 [label="cnf", dir="back"];
  vertex_3 [shape=box, label="negated_goal\l  ¬ (∀ P/137:point P1/138:point A/139:point B/140:point.\l        ((A/139 ≠ B/140) ⇒\l         ((Reflect P1/138 P/137 A/139 B/140) ≡\l          (ReflectL P1/138 P/137 A/139 B/140))))\l  # skolems: [].\l", style=filled];
  vertex_3 -> vertex_4 [label="cnf.neg", dir="back"];
  vertex_4 [color=green, shape=box, label="goal\l  [file\l   \"../resultat/geocoq_extract/zf/Ch10_line_reflexivity/is_image_is_image_spec.zf\" \l   \"zf_stmt_128\"]\l  ∀ P/137:point P1/138:point A/139:point B/140:point.\l    ((A/139 ≠ B/140) ⇒\l     ((Reflect P1/138 P/137 A/139 B/140) ≡\l      (ReflectL P1/138 P/137 A/139 B/140))).\l", style=filled];
  vertex_1 -> vertex_5 [label="simplify_reflect-", dir="back"];
  vertex_5 [shape=box, label="sk_A = sk_B ← ⟦sk_A = sk_B⟧/3\l", style=filled];
  vertex_5 -> vertex_6 [label="split", dir="back"];
  vertex_6 [shape=box, label="[¬ReflectL sk_P1 sk_P sk_A sk_B ∨ sk_A = sk_B]\l", style=filled];
  vertex_6 -> vertex_7 [label="simplify", dir="back"];
  vertex_7 [shape=box, label="[sk_A = sk_B\l ∨ ¬ReflectL sk_P1 sk_P sk_A sk_B\l ∨ ¬ReflectL sk_P1 sk_P sk_A sk_B]\l", style=filled];
  vertex_7 -> vertex_8 [label="rw_clause\l\{X0[1] → sk_P1[0], X1[1] → sk_P[0], X2[1] → sk_A[0], X3[1] → sk_B[0]\}[1]\l", dir="back"];
  vertex_8 [color=navajowhite, shape=box, label="(¬Reflect X0 X1 X2 X3 :=\l   [X2 ≠ X3 ∨ ¬Midpoint X2 X1 X0∧\l    X2 = X3 ∨ ¬ReflectL X0 X1 X2 X3] [B])\l", style=filled];
  vertex_8 -> vertex_9 [label="rw.lit", dir="back"];
  vertex_9 [color=yellow, shape=box, label="rewrite\l  [file\l   \"../resultat/geocoq_extract/zf/Ch10_line_reflexivity/is_image_is_image_spec.zf\" \l   \"LabelReflect\"]\l  ¬ Reflect X0 X1 X2 X3\l  =\> X2 ≠ X3 ∨ ¬ Midpoint X2 X1 X0 && X2 = X3 ∨ \l     ¬ ReflectL X0 X1 X2 X3.\l", style=filled];
  vertex_7 -> vertex_10 [label="rw_clause\l\{X0[1] → sk_P1[0], X1[1] → sk_P[0], X2[1] → sk_A[0], X3[1] → sk_B[0]\}[0]\l", dir="back"];
  vertex_10 [shape=box, label="[¬ReflectL sk_P1 sk_P sk_A sk_B ∨ ¬Reflect sk_P1 sk_P sk_A sk_B]\l", style=filled];
  vertex_10 -> vertex_3 [label="cnf", dir="back"];
  vertex_0 -> vertex_11 [label="sat_resolution", dir="back"];
  vertex_11 [color=cyan3, shape=box, label="⟦sk_A = sk_B⟧/3\l", style=filled];
  vertex_11 -> vertex_12 [label="sat_resolution", dir="back"];
  vertex_12 [color=cyan3, shape=box, label="¬⟦ReflectL sk_P1 sk_P sk_A sk_B⟧/2\l", style=filled];
  vertex_12 -> vertex_1 [label="sat_resolution", dir="back"];
  vertex_12 -> vertex_13 [label="sat_resolution", dir="back"];
  vertex_13 [color=cyan3, shape=box, label="¬⟦ReflectL sk_P1 sk_P sk_A sk_B⟧/2 ⊔ ⟦sk_A = sk_B⟧/3\l", style=filled];
  vertex_13 -> vertex_6 [label="split", dir="back"];
  vertex_11 -> vertex_14 [label="sat_resolution", dir="back"];
  vertex_14 [color=cyan3, shape=box, label="⟦ReflectL sk_P1 sk_P sk_A sk_B⟧/2 ⊔ ⟦sk_A = sk_B⟧/3\l", style=filled];
  vertex_14 -> vertex_15 [label="split", dir="back"];
  vertex_15 [shape=box, label="[ReflectL sk_P1 sk_P sk_A sk_B ∨ sk_A = sk_B]\l", style=filled];
  vertex_15 -> vertex_16 [label="rw_clause\l\{X0[1] → sk_P1[0], X1[1] → sk_P[0], X2[1] → sk_A[0], X3[1] → sk_B[0]\}[1]\l", dir="back"];
  vertex_16 [color=navajowhite, shape=box, label="(Reflect X0 X1 X2 X3 :=\l   [X2 ≠ X3 ∨ X2 = X3∧\l    X2 ≠ X3 ∨ Midpoint X2 X1 X0∧\l    ReflectL X0 X1 X2 X3 ∨ X2 = X3∧\l    ReflectL X0 X1 X2 X3 ∨ Midpoint X2 X1 X0] [B])\l", style=filled];
  vertex_16 -> vertex_17 [label="rw.lit", dir="back"];
  vertex_17 [color=yellow, shape=box, label="rewrite\l  [file\l   \"../resultat/geocoq_extract/zf/Ch10_line_reflexivity/is_image_is_image_spec.zf\" \l   \"LabelReflect\"]\l  Reflect X0 X1 X2 X3\l  =\> X2 ≠ X3 ∨ X2 = X3 && X2 ≠ X3 ∨ Midpoint X2 X1 X0 && \l     ReflectL X0 X1 X2 X3 ∨ X2 = X3 && ReflectL X0 X1 X2 X3 ∨ \l     Midpoint X2 X1 X0.\l", style=filled];
  vertex_15 -> vertex_18 [label="rw_clause\l\{X0[1] → sk_P1[0], X1[1] → sk_P[0], X2[1] → sk_A[0], X3[1] → sk_B[0]\}[0]\l", dir="back"];
  vertex_18 [shape=box, label="Reflect sk_P1 sk_P sk_A sk_B\l", style=filled];
  vertex_18 -> vertex_19 [label="clc", dir="back"];
  vertex_19 [shape=box, label="¬ReflectL sk_P1 sk_P sk_A sk_B\l", style=filled];
  vertex_19 -> vertex_12 [label="simpl_trail", dir="back"];
  vertex_19 -> vertex_20 [label="simpl_trail", dir="back"];
  vertex_20 [shape=box, label="¬ReflectL sk_P1 sk_P sk_A sk_B ← ¬⟦ReflectL sk_P1 sk_P sk_A sk_B⟧/2\l", style=filled];
  vertex_20 -> vertex_21 [label="split", dir="back"];
  vertex_21 [shape=box, label="[sk_A ≠ sk_B\l ∨ ¬Midpoint sk_A sk_P sk_P1\l ∨ ¬ReflectL sk_P1 sk_P sk_A sk_B]\l", style=filled];
  vertex_21 -> vertex_8 [label="rw_clause\l\{X0[1] → sk_P1[0], X1[1] → sk_P[0], X2[1] → sk_A[0], X3[1] → sk_B[0]\}[1]\l", dir="back"];
  vertex_21 -> vertex_10 [label="rw_clause\l\{X0[1] → sk_P1[0], X1[1] → sk_P[0], X2[1] → sk_A[0], X3[1] → sk_B[0]\}[0]\l", dir="back"];
  vertex_18 -> vertex_22 [label="clc", dir="back"];
  vertex_22 [shape=box, label="[ReflectL sk_P1 sk_P sk_A sk_B ∨ Reflect sk_P1 sk_P sk_A sk_B]\l", style=filled];
  vertex_22 -> vertex_3 [label="cnf", dir="back"];
  }


