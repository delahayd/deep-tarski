include "../tarski_term_def.zf".
#out_distinct
assert[name "Labelout_distinct"] forall (A B C : point). Out A B C => B!=A && C!=A.
#l11_4_1
assert[name "Labell11_4_1"] forall (A B C D E F : point). CongA A B C D E F => A!=B && C!=B && D!=E && F!=E && (forall (A1 C1 D1 F1 : point). Out B A1 A && Out B C1 C && Out E D1 D && Out E F1 F && Cong B A1 E D1 && Cong B C1 E F1 => Cong A1 C1 D1 F1).
#l6_7
assert[name "Labell6_7"] forall (P A B C : point). Out P A B => Out P B C => Out P A C.
#l11_4_2
assert[name "Labell11_4_2"] forall (A B C D E F : point). (A!=B && C!=B && D!=E && F!=E && (forall (A1 C1 D1 F1 : point). Out B A1 A && Out B C1 C && Out E D1 D && Out E F1 F && Cong B A1 E D1 && Cong B C1 E F1 => Cong A1 C1 D1 F1)) => CongA A B C D E F.
#cong_diff_4
assert[name "Labelcong_diff_4"] forall (A B C D : point). D!=C => Cong A B C D => A!=B.
#l6_6
assert[name "Labell6_6"] forall (P A B : point). Out P A B => Out P B A.
goal forall (A B C A1 B1 C1 A0 C0 A2 C2 : point). CongA A B C A1 B1 C1 => Out B A A0 => Out B C C0 => Out B1 A1 A2 => Out B1 C1 C2 => CongA A0 B C0 A2 B1 C2.