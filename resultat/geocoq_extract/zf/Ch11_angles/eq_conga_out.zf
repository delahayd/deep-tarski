include "../tarski_term_def.zf".
#cong_symmetry
assert[name "Labelcong_symmetry"] forall (A B C D : point). Cong A B C D => Cong C D A B.
#l2_11
assert[name "Labell2_11"] forall (A B C A1 B1 C1 : point). Bet A B C => Bet A1 B1 C1 => Cong A B A1 B1 => Cong B C B1 C1 => Cong A C A1 C1.
#cong_right_commutativity
assert[name "Labelcong_right_commutativity"] forall (A B C D : point). Cong A B C D => Cong A B D C.
#cong3_preserves_out
assert[name "Labelcong3_preserves_out"] forall (A B C A1 B1 C1 : point). Out A B C => Cong_3 A B C A1 B1 C1 => Out A1 B1 C1.
#l5_1
assert[name "Labell5_1"] forall (A B C D : point). A!=B => Bet A B C => Bet A B D => Bet A C D || Bet A D C.
#between_symmetry
assert[name "Labelbetween_symmetry"] forall (A B C : point). Bet A B C => Bet C B A.
#bet2_out_out
assert[name "Labelbet2_out_out"] forall (A B C B1 C1 : point). B!=A => B1!=A => Out A C C1 => Bet A B C => Bet A B1 C1 => Out A B B1.
#between_identity
assert[name "Labelbetween_identity"] forall (A B : point). Bet A B A => A=B.
rewrite[name "LabelCongA"] forall (A B C D E F : point). CongA A B C D E F <=> A != B && C != B && D != E && F != E && (exists (A1 C1 D1 F1 : point).  Bet B A A1 && Cong A A1 E D && Bet B C C1 && Cong C C1 E F && Bet E D D1 && Cong D D1 B A && Bet E F F1 && Cong F F1 B C && Cong A1 C1 D1 F1).
rewrite[name "LabelOut"] forall (P A B : point). Out P A B <=> A != P && B != P && (Bet P A B || Bet P B A).
goal forall (A B D E F : point). CongA A B A D E F => Out E D F.