include "../rew_type.zf".
rewrite[name "LabelPer"] forall (A B C : point). Per A B C <=> (exists (C1 : point). Midpoint B C C1 && Cong A C A C1).
#between_trivial
assert[name "Labelbetween_trivial"] forall (A B : point). Bet A B B.
#cong_inner_transitivity
assert[name "Labelcong_inner_transitivity"] forall (A B C D E F : point). Cong A B C D => Cong A B E F => Cong C D E F.
#cong_reflexivity
assert[name "Labelcong_reflexivity"] forall (A B : point). Cong A B A B.
#cong_reverse_identity
assert[name "Labelcong_reverse_identity"] forall (A C D : point). Cong A A C D => C=D.
#l7_3_2
assert[name "Labell7_3_2"] forall (A : point). Midpoint A A A.
#segment_construction
assert[name "Labelsegment_construction"] forall (A B C D : point). exists (E :point). Bet A B E && Cong B E C D.
goal forall (A B : point). Per A B B.