include "../rew_type.zf".
rewrite[name "LabelAr2"] forall (O E E1 A B C : point). Ar2 O E E1 A B C <=> ~ Col O E E1 && Col O E A && Col O E B && Col O E C.
rewrite[name "LabelOpp"] forall (O E E1 A B : point). Opp O E E1 A B <=> Sum O E E1 B A O.
rewrite[name "LabelProd"] forall (O E E1 A B C : point). Prod O E E1 A B C <=> Ar2 O E E1 A B C && (exists (B1 : point). Pj E E1 B B1 && Col O E1 B1 && Pj E1 A B1 C).
#col_trivial_1
assert[name "Labelcol_trivial_1"] forall (A B : point). Col A A B.
#col_trivial_2
assert[name "Labelcol_trivial_2"] forall (A B : point). Col A B B.
#diff_A_O
assert[name "Labeldiff_A_O"] forall (O E E1 A : point). ~Col O E E1 => Col O E A => Diff O E E1 A O A.
#diff_uniqueness
assert[name "Labeldiff_uniqueness"] forall (O E E1 A B D1 D2 : point). Diff O E E1 A B D1 => Diff O E E1 A B D2 => D1=D2.
#neg_not_pos
assert[name "Labelneg_not_pos"] forall (O E A : point). Ng O E A => ~Ps O E A.
#not_col_distincts
assert[name "Labelnot_col_distincts"] forall (A B C : point). ~Col A B C => ~Col A B C && A!=B && B!=C && A!=C.
#opp_comm
assert[name "Labelopp_comm"] forall (X Y O E E1 : point). ~ Col O E E1 => Opp O E E1 X Y => Opp O E E1 Y X.
#opp_exists
assert[name "Labelopp_exists"] forall (A O E E1 : point). ~ Col O E E1 => Col O E A => (exists (MA : point). Opp O E E1 A MA).
#opp_pos_neg
assert[name "Labelopp_pos_neg"] forall (O E E1 A MA : point). Ps O E A => Opp O E E1 A MA => Ng O E MA.
#pos_null_neg
assert[name "Labelpos_null_neg"] forall (O E E1 A MA : point). Opp O E E1 A MA => Ps O E A || O=A || Ps O E MA.
#prod_0_l
assert[name "Labelprod_0_l"] forall (O E E1 A B C APC BPC : point). LeP O E E1 A B => Sum O E E1 A C APC => Sum O E E1 B C BPC => LeP O E E1 APC BPC.
#prod_1_l
assert[name "Labelprod_1_l"] forall (O E E1 A IA : point). O!=A => LeP O E E1 O A => Prod O E E1 A IA E => LeP O E E1 O IA.
#prod_assoc1
assert[name "Labelprod_assoc1"] forall (O E E1 A B C AB BC ABC : point). Prod O E E1 A B AB => Prod O E E1 B C BC => (Prod O E E1 A BC ABC => Prod O E E1 AB C ABC).
#prod_pos_pos
assert[name "Labelprod_pos_pos"] forall (O E E1 A B AB : point). Ps O E A => Ps O E B => Prod O E E1 A B AB => Ps O E AB.
#prod_uniqueness
assert[name "Labelprod_uniqueness"] forall (A B C1 C2 O E E1 : point). ~ Col O E E1 => Prod O E E1 A B C1 => Prod O E E1 A B C2 => C1=C2.
goal forall (O E E1 A IA : point). O!=A => LeP O E E1 O A => Prod O E E1 A IA E => LeP O E E1 O IA.